#!/usr/bin/env python3
# Copyright 2022 ARC Centre of Excellence for Climate Extremes
# author: Paola Petrelli <paola.petrelli@utas.edu.au>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This code is a simple test frame to set the drs regex for ingest.yaml

import re

# set a few paths you wan tto match, NB the \n at the end, this is how they ar egenerated by ingest.py
s=['/g/data/ia39/aus-ref-clim-data-nci/frogs/data/1DD_V1/TAPEER_v1.5/TAPEER-BRAIN-1-5.1DD.2020.nc\n',
'/g/data/ia39/aus-ref-clim-data-nci/frogs/data/1DD_V1/CFSR/pr_day_reanalysis_CFSR_19980101-19981231.nc\n',
'/g/data/ia39/aus-ref-clim-data-nci/frogs/data/1DD_V1/3B42_IR_v7.0/3B42v7_IR.1DD.2009.nc\n'
        ]

s=['/g/data/ia39/aus-ref-clim-data-nci/cmorph/data/v1.0/30min/8km/2003/12/CMORPH_V1.0_ADJ_8km-30min_2003120300.nc\n',
'/g/data/ia39/aus-ref-clim-data-nci/frogs/data/v1.0/30min/8km/2021/01/CMORPH_V1.0_ADJ_8km-30min_2021010400.nc\n',
'/g/data/ia39/aus-ref-clim-data-nci/cmorph/data/v1.0/30min/8km/1999/02/CMORPH_V1.0_ADJ_8km-30min_1999020200.nc\n',
        ]
# insert here your DRS path trials
drs_re= re.compile('''^(?P<path>
    /g/data/ia39/aus-ref-clim-data-nci/frogs/data
    /(?P<version>[^/]+)
    /(?P<dset>[^/]+)
    /(?P<variable>(?!.*\b.nc\b).+)
    .nc)''', re.VERBOSE)
drs_re = re.compile(''' ^(?P<path>
    /g/data/ia39/aus-ref-clim-data-nci/cmorph/data
    /v(?P<version>[^/]+)                          # /v1.0
    /(?P<frequency>[^/]+)                         # /30min
    /(?P<grid>[^/]+)                             # /8km
    /(?P<year>[^/]+)                             # /2020
    /(?P<month>[^/]+)                            # /02
    /CMORPH_V(?P=version)_ADJ_(?P=grid)           # /CMORPH_V1.0_ADJ_8km
    -(?P=frequency)_(?P<date>[^\0\0]+)             # -30min_20200201
    00.nc)''', re.VERBOSE)



print(drs_re)
for path in s:
    print(path)
    match = drs_re.match(path)
    if match is None:
        print('match none')
        continue
    else:
        print(match.groups())
    columns = list(match.groupdict().keys())
print(columns)
